@model MC.Models.Project

@{
    ViewBag.Title = "课程管理";
    Layout = null;
}

<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <link href="~/layui/css/layui.css" rel="stylesheet" />
    <script src="~/layui/layui.js"></script>
    <link href="~/Content/other.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-2.1.4.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
</head>
<body>
    <div style="padding:20px 30px 0 0">
        @using (Ajax.BeginForm("courseadd", "admin", "", new AjaxOptions() { HttpMethod = "post", OnSuccess = "refresh" }, new { @class = "layui-form" }))
        {
            @Html.AntiForgeryToken()
            @Html.Hidden(Model.ID.ToString())
            @Html.HiddenFor(model => model.IsUse)


            <div class="layui-form-item">
                @Html.LabelFor(model => model.Name, new { @class = "layui-form-label" })
                <div class="layui-input-block">
                    @Html.TextBoxFor(model => model.Name, new Dictionary<string, object> { { "class", "layui-input" }, { "placeholder", "请输入课程名称" }, { "lay-verify", "required" } })
                </div>
            </div>
            <div class="layui-form-item">
                @Html.LabelFor(model => model.Description, new { @class = "layui-form-label" })
                <div class="layui-input-block">
                    @Html.TextAreaFor(model => model.Description, new Dictionary<string, object> { { "class", "layui-textarea" }, { "placeholder", "请输入课程描述" }, { "lay-verify", "required" } })
                </div>
            </div>
            <div class="layui-form-item">
                <div class="layui-inline">
                    @Html.LabelFor(model => model.StartDate, new { @class = "layui-form-label" })
                    <div class="layui-input-inline">
                        @Html.TextBoxFor(model => model.StartDate, "{0:yyyy-MM-dd}", new Dictionary<string, object> { { "class", "layui-input" }, { "placeholder", "开课时间" }, { "lay-verify", "date" }, { "id", "idStartDate" } })
                    </div>
                </div>
                <div class="layui-inline">
                    @Html.LabelFor(model => model.EndDate, new { @class = "layui-form-label" })
                    <div class="layui-input-inline">
                        @Html.TextBoxFor(model => model.EndDate, "{0:yyyy-MM-dd}", new Dictionary<string, object> { { "class", "layui-input" }, { "placeholder", "结课时间" }, { "lay-verify", "date" }, { "id", "idEndDate" } })
                    </div>
                </div>
            </div>
            <div class="layui-form-item">
                @Html.LabelFor(model => model.Total, new { @class = "layui-form-label" })
                <div class="layui-input-block">
                    @Html.TextBoxFor(model => model.Total, new Dictionary<string, object> { { "class", "layui-input" }, { "placeholder", "￥" }, { "lay-verify", "required" }, { "type", "number" } })
                </div>
            </div>
            <div class="layui-form-item">
                <div class="layui-inline">
                    @Html.LabelFor(model => model.CrUser, new { @class = "layui-form-label" })
                    <div class="layui-input-inline">
                        @Html.TextBoxFor(model => model.CrUser, new Dictionary<string, object> { { "class", "layui-input layui-disabled" }, { "readonly", "readonly" } })
                    </div>
                </div>
                <div class="layui-inline">
                    @Html.LabelFor(model => model.CrTime, new { @class = "layui-form-label" })
                    <div class="layui-input-inline">
                        @Html.TextBoxFor(model => model.CrTime, new Dictionary<string, object> { { "class", "layui-input layui-disabled" }, { "readonly", "readonly" } })
                    </div>
                </div>
            </div>
            <div class="layui-form-item">
                <div class="layui-inline">
                    @Html.LabelFor(model => model.UpUser, new { @class = "layui-form-label" })
                    <div class="layui-input-inline">
                        @Html.TextBoxFor(model => model.UpUser, new Dictionary<string, object> { { "class", "layui-input layui-disabled" }, { "readonly", "readonly" } })
                    </div>
                </div>
                <div class="layui-inline">
                    @Html.LabelFor(model => model.UpTime, new { @class = "layui-form-label" })
                    <div class="layui-input-inline">
                        @Html.TextBoxFor(model => model.UpTime, new Dictionary<string, object> { { "class", "layui-input layui-disabled" }, { "readonly", "readonly" } })
                    </div>
                </div>

            </div>

            <div class="layui-form-item">
                @Html.LabelFor(model => model.IsUse, new { @class = "layui-form-label" })
                <div class="layui-input-inline">
                    @Html.TextBoxFor(model => model.IsUse, new Dictionary<string, object> { { "lay-skin", "switch" }, { "lay-filter", "switchOn" }, { "lay-text", "已启用|未启用" }, { "type", "checkbox" } })
                </div>
            </div>

            <div class="layui-form-item">
                <div class="layui-input-block">
                    <button class="layui-btn" lay-submit="" lay-filter="save">提交</button>
                    <button type="reset" class="layui-btn layui-btn-primary">重置</button>
                </div>
            </div>
        }
        <script>
   
            var table;
            var layer;
            layui.use(['form', 'laydate', 'table'], function () {
       
                var form = layui.form,
                    laydate = layui.laydate;
                table = layui.table;
                layer = layui.layer;
                laydate.render({
                    elem: '#idStartDate',
                });
                laydate.render({
                    elem: '#idEndDate',
                    //type: 'datetime'
                });

                form.on('submit(save)', function (data) {
                });

            });

            function refresh(data) {
                if (data.code == 0) {
               
                    layer.msg("保存成功", { icon: 1 });
                }
                else {
                    layer.msg(data.msg, { icon: 5 });
                }
            }
        </script>
    </div>
</body>
</html>
